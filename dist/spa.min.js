/*! spa v1.0.0 2016-02-16 */
var Spa;!function(a){var b=function(){function b(){}return b.prototype.init=function(){a.RouteMapper.init()},b.generateHtml=function(a,c){var d=b.namespace[c];if(void 0!==d){var e=b.namespace[c](a),f=document.getElementById(b.container);if(null===f)throw"Couldn't find element. Is DOM ready?";document.getElementById(b.container).innerHTML=e}else b.renderErrorPage()},b.renderErrorPage=function(){b.generateHtml(null,"404")},b.namespace=null,b.container=null,b}();a.App=b}(Spa||(Spa={}));var Rest=function(){function a(a,b){void 0===b&&(b="json"),this.url=a,this.headers={},this.type=b,this.error=null}return a.prototype.setError=function(a){this.error=a},a.prototype.addHeader=function(a,b){this.headers[a]=b},a.prototype.setHeader=function(a){this.headers=a},a.prototype.getHeaders=function(){return this.headers},a.prototype.get=function(a,b,c){this.request("GET",a,b,c)},a.prototype.post=function(a,b,c){this.request("POST",a,b,c)},a.prototype.put=function(a,b,c){this.request("PUT",a,b,c)},a.prototype["delete"]=function(a,b,c){this.request("DELETE",a,b,c)},a.prototype.request=function(a,b,c,d){var e=this;$.ajax({url:this.url+b,type:a,data:c,dataType:this.type,contentType:"application/json",headers:this.headers,success:function(a){if(a)d(a);else{var c={code:100,message:"Error with data",path:b};null!==e.error?e.error(c):d(null,c)}},error:function(a){var c={code:a.status,message:a.statusText,path:b};null!==e.error?e.error(c):d(null,c)}})},a}(),Spa;!function(a){var b=function(){function b(a){this.route=a,this.title=null}return b.prototype.setRouteTitle=function(a){this.title=a},b.prototype.getRouteTitle=function(){return this.title},b.prototype.getRoute=function(){return this.route},b.prototype.addRoute=function(b,c){a.RouteMapper.addRoute(this.route+b,c)},b.prototype.render=function(b){a.App.generateHtml(null,"pages/"+b)},b}();a.Route=b}(Spa||(Spa={}));var Spa;!function(a){var b=function(){function a(){}return a.init=function(){hasher.changed.add(a.hashChange),hasher.initialized.add(a.hashChange),hasher.init()},a.setHashSilently=function(b){hasher.changed.active=!1,a.setHash(b),hasher.changed.active=!0},a.setHash=function(a){hasher.setHash(a)},a.isHash=function(a){return a===hasher.getHash()},a.addRoute=function(a,b){crossroads.addRoute(a,b)},a.hashChange=function(a,b){crossroads.parse(a)},a}();a.RouteMapper=b}(Spa||(Spa={}));